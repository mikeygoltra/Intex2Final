<!DOCTYPE html>
<html>
<head>
    <title>Supervised Model - Head Direction</title>
    <style>

        h2 {
            margin-bottom: 10px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"], textarea {
            width: 50%;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
            box-sizing: border-box;
        }

        button {
            background-color: #4CAF50;
            border: none;
            color: white;
            padding: 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 10px 0;
            cursor: pointer;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h2>
        This page will take all of your inputs for each of these fields, and using the statistical model we have created through the mummy data, it will predict which direction
        the head would be facing when excavated based on the attributes that the mummy was given below. Without a value in every single field, the prediction will not work.
        So make sure to put a value in for every field!
    </h2></br>
    <h3>
        Besides West to Feet, West to Head, and South to Feet (which indicates below what values should be input), for the following input fields,
        only enter the number 0 or 1.
    </h3></br>
    <h4>The number "0" = no/false, and the number "1" = yes/true.</h4></br>

    <div>
        <label for="inputData">Sex = Male:</label>
        <input type="text" id="sexMale" name="sexMale">
        </br>
        <label for="inputData">Sex = Female:</label>
        <input type="text" id="sexFemale" name="sexFemale">
        </br>
        <label for="inputData">Hair Color = Yellow:</label>
        <input type="text" id="hairColor_Y" name="hairColor_Y">
        </br>
        <label for="inputData">Sample Collected = Unknown:</label>
        <input type="text" id="samplesCollected" name="samplesCollected">
        </br>
        <label for="inputData">Wrapping = B:</label>
        <input type="text" id="wrapping_B" name="wrapping_B">
        </br>
        <label for="inputData">Age at Death = Child:</label>
        <input type="text" id="ageAtDeath_C" name="ageAtDeath_C">
        </br>
        <label for="inputData">No Samples Collected:</label>
        <input type="text" id="samplesCollected_F" name="samplesCollected_F">
        </br>
        <label for="inputData">West To Feet (enter a number between 0.05 and 5):</label>
        <input type="text" id="westtofeet" name="westtofeet">
        </br>
        <label for="inputData">West To Head (enter a number between 0.05 and 5):</label>
        <input type="text" id="westtohead" name="westtohead">
        </br>
        <label for="inputData">South to Feet (enter a number between 0.05 and 5):</label>
        <input type="text" id="southtofeet" name="southtofeet">
        </br>

        <button onclick="performInference()">PREDICT</button>
        </br>
        </br>
    </div>
    <div>
        <label for="outputData">Output Data:</label>
        </br>
        <textarea id="outputData" name="outputData" rows="10" cols="50" readonly></textarea>
        <p>
            If the value in the "Output Data" textbox is 0.49 or below (positive or negative doesn't matter), then the predicted direction the head will be facing is the WEST
            (because "0" in this case means that head direction is west in our statistical model).
        </p>
        <p>
            If the value in the "Output Data" textbox is 0.50 or above (positive or negative doesn't matter), then the predicted direction the head will be facing is the EAST
            (because "1" in this case means that head direction is east in our statistical model).
        </p>
    </div>

    <script>
        function performInference() {
            // Get the input data from the form
            const sexMale = parseFloat(document.getElementById('sexMale').value);
            const sexFemale = parseFloat(document.getElementById('sexFemale').value);
            const hairColor_Y = parseFloat(document.getElementById('hairColor_Y').value);
            const samplesCollected = parseFloat(document.getElementById('samplesCollected').value);
            const wrapping_B = parseFloat(document.getElementById('wrapping_B').value);
            const ageAtDeath_C = parseFloat(document.getElementById('ageAtDeath_C').value);
            const samplesCollected_F = parseFloat(document.getElementById('samplesCollected_F').value);
            const westtofeet = parseFloat(document.getElementById('westtofeet').value);
            const westtohead = parseFloat(document.getElementById('westtohead').value);
            const southtofeet = parseFloat(document.getElementById('southtofeet').value);

            // Define the API endpoint URL
            const apiUrl = 'https://localhost:44370/score';

            // Define the request body
            const requestBody = {
                "sexMale": sexMale,
                "sexFemale": sexFemale,
                "hairColor_Y": hairColor_Y,
                "samplesCollected": samplesCollected,
                "wrapping_B": wrapping_B,
                "ageAtDeath_C": ageAtDeath_C,
                "samplesCollected_F": samplesCollected_F,
                "westtofeet": westtofeet,
                "westtohead": westtohead,
                "southtofeet": southtofeet
            };

            // Send the POST request to the API endpoint
            fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestBody)
            })
                .then(response => response.json())
                .then(data => {
                    // Display the output data in the textarea
                    const outputDataTextarea = document.getElementById('outputData');
                    outputDataTextarea.textContent = JSON.stringify(data);
                })
                .catch(error => {
                    console.error('Error performing inference:', error);
                });
        }


    </script>
</body>
</html>
